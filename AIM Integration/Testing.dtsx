<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/28/2023 6:21:12 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HIN-9WN0VT3-LT"
  DTS:CreatorName="RRI\nmarukurthi"
  DTS:DTSID="{02059EB0-FD8D-4A1F-A20F-E34BA0324E11}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="Testing"
  DTS:PackageType="5"
  DTS:VersionBuild="9"
  DTS:VersionGUID="{BEDF1163-935F-4AA1-9EE3-86FDE102286E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1BC64C63-B34C-4156-9D11-C9F9E9A8EB27}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a67dbde8f4ca4deaa39ee0c587b7cb90"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties.Settings.get_Default():ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties.Sett" +
    "ings")]

namespace ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.IdentityModel.Tokens;
using Newtonsoft.Json;
using System.Data;
using System.Data.SqlClient;
using System;
using System.IdentityModel.Tokens.Jwt;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Net.Security;
using System.Security.Claims;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Collections.Generic;
using Authentication;
using JwtRegisteredClaimNames = Microsoft.IdentityModel.JsonWebTokens.JwtRegisteredClaimNames;

#endregion

namespace ST_a67dbde8f4ca4deaa39ee0c587b7cb90
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);

        }
        public System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            var assemblyReferencePath = "C:\\Users\\nmarukurthi\\OneDrive - RealPage\\STAG\\AIM Integration\\Authentication\\bin\\Debug";
            //string path = @"D:\DllsProjects\";

            if (args.Name.Contains("Authentication"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "Authentication.dll"));
            }
            if (args.Name.Contains("System.IdentityModel.Tokens.Jwt"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "System.IdentityModel.Tokens.Jwt.dll"));
            }
            if (args.Name.Contains("Microsoft.IdentityModel.Tokens"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "Microsoft.IdentityModel.Tokens.dll"));
            }
            if (args.Name.Contains("Microsoft.IdentityModel.JsonWebTokens"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "Microsoft.IdentityModel.JsonWebTokens.dll"));
            }
            if (args.Name.Contains("Microsoft.IdentityModel.Logging"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "Microsoft.IdentityModel.Logging.dll"));
            }
            if (args.Name.Contains("Microsoft.IdentityModel.Abstractions"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "Microsoft.IdentityModel.Abstractions.dll"));
            }
            if (args.Name.Contains("Newtonsoft.Json"))
            {
                return System.Reflection.Assembly.LoadFile(Path.Combine(assemblyReferencePath, "Newtonsoft.Json.dll"));
            }
            return null;
        }
        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            TLS_Protocol();
            // TODO: Add your code here
            try
            {
                AccessToken t = new AccessToken();
                var token = t.GetAccessToken();
                System.Windows.Forms.MessageBox.Show(token.ToString());
            }
            catch(Exception msg)
            {
                System.Windows.Forms.MessageBox.Show(msg.ToString());
            }
            finally
            {
                Dts.TaskResult = (int)ScriptResults.Success;
            }

		}

        private static void TLS_Protocol()
        {
            try
            { //try TLS 1.3
                ServicePointManager.SecurityProtocol = (SecurityProtocolType)12288
                                                     | (SecurityProtocolType)3072
                                                     | (SecurityProtocolType)768
                                                     | SecurityProtocolType.Tls;
            }
            catch (NotSupportedException)
            {
                try
                { //try TLS 1.2
                    ServicePointManager.SecurityProtocol = (SecurityProtocolType)3072
                                                         | (SecurityProtocolType)768
                                                         | SecurityProtocolType.Tls;
                }
                catch (NotSupportedException)
                {
                    try
                    { //try TLS 1.1
                        ServicePointManager.SecurityProtocol = (SecurityProtocolType)768
                                                             | SecurityProtocolType.Tls;
                    }
                    catch (NotSupportedException)
                    { //TLS 1.0
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls;
                    }
                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a67dbde8f4ca4deaa39ee0c587b7cb90</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a67dbde8f4ca4deaa39ee0c587b7cb90</msb:DisplayName>
    <msb:ProjectId>{6FF1D959-72DF-4969-BF3D-D5E6C8451A5B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="102678caaca04914a0aaba72f2157b76">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>146</msb:LineNumber>
      <msb:ColumnNumber>3</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="2e2d29aba6524f4fa506741e7a4a5436">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>106</msb:LineNumber>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a67dbde8f4ca4deaa39ee0c587b7cb90")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a67dbde8f4ca4deaa39ee0c587b7cb90")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6EE0A969-5240-4182-99F9-5254D1CA8750}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a67dbde8f4ca4deaa39ee0c587b7cb90</RootNamespace>
    <AssemblyName>ST_a67dbde8f4ca4deaa39ee0c587b7cb90</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Authentication">
      <HintPath>C:\Users\nmarukurthi\OneDrive - RealPage\STAG\AIM Integration\Authentication\bin\Debug\Authentication.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.IdentityModel.Abstractions">
      <HintPath>C:\DllProjects\Microsoft.IdentityModel.Abstractions.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.IdentityModel.JsonWebTokens">
      <HintPath>C:\DllProjects\Microsoft.IdentityModel.JsonWebTokens.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.IdentityModel.Logging">
      <HintPath>C:\DllProjects\Microsoft.IdentityModel.Logging.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.IdentityModel.Tokens">
      <HintPath>C:\DllProjects\Microsoft.IdentityModel.Tokens.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\DllProjects\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.IdentityModel.Tokens.Jwt">
      <HintPath>C:\DllProjects\System.IdentityModel.Tokens.Jwt.dll</HintPath>
    </Reference>
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.Http.WebRequest" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a67dbde8f4ca4deaa39ee0c587b7cb90.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a67dbde8f4ca4deaa39ee0c587b7cb90.dll">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
kwiaBLIAAwB8IgAAAACTCLQAtwADAIMiAAAAAJMIwAC8AAMAiyIAAAAAlghTBsIABACSIgAAAACG
GNYEBgAEAJoiAAAAAJEY3ASuAAQAAAABAJMEAAACANoFAAABAL4CCQDWBAEAEQDWBAYAGQDWBAoA
KQDWBBAAMQDWBBAAOQDWBBAAQQDWBBAASQDWBBAAUQDWBBAAWQDWBBAAYQDWBBAAaQDWBAYAsQDW
BAYA0QDWBBUA4QDWBAYAcQDWBAYA6QAUBBsA8QDWBCAA6QDEAiYAkQCGADAA+QAaBjQAAQGPADkA
gQB9AD8ACQHWBAYACQHwAzAAiQAQAzAAEQF7BkUAcQArBkwAIQFsBgEAKQHDA1IAiQDWBAYAOQFr
AFkAOQGLBmIAuQDWBGcA2QDWBAYACAAUAIkACAAYAI4AKQBzAP4ALgALANYALgATAN8ALgAbAP4A
LgAjAAcBLgArADABLgAzADABLgA7ADABLgBDAAcBLgBLADYBLgBTADABLgBbAE0BQwBjAI4ASQBz
AP4AYQB7AI4AYwBrAI4ALAADAAEABAADAAAAngTHAAAA1ADMAAAAVwbRAAIABgADAAIABwAFAAEA
CAAFAAIACQAHAASAAAABAAAAhSG8WwAAAAAAAAEAAAAEAAAAAAAAAAAAAABuAEAAAAAAABAAAAAA
AAAAAAAAAHcAHgMAAAAABgAVAAAAAAAAAAAAgAD0BQAAAAAEAAAAAAAAAAAAAABuANgDAAAAAAEA
AAAAAAAAAAAAAAAAJgQAAAAABAAAAAAAAAAAAAAAbgDfBQAAAAAAAAAAAQAAACcFAAAFAAIAAAAA
AABTVF9hNjdkYmRlOGY0Y2E0ZGVhYTM5ZWUwYzU4N2I3Y2I5MAA8TW9kdWxlPgBTeXN0ZW0uSU8A
dmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUATG9hZEZpbGUAZ2V0X05hbWUAQ29tYmluZQBTZWN1cml0eVByb3RvY29sVHlw
ZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAGFkZF9Bc3NlbWJseVJlc29sdmUAQ3VycmVudERvbWFp
bl9Bc3NlbWJseVJlc29sdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRo
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF9hNjdkYmRlOGY0Y2E0ZGVhYTM5ZWUwYzU4N2I3Y2I5MC5kbGwAVExTX1Byb3RvY29sAHNldF9T
ZWN1cml0eVByb3RvY29sAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEdldEFjY2Vzc1Rva2VuAFNj
cmlwdE1haW4AQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAEF1dGhlbnRpY2F0aW9uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE5v
dFN1cHBvcnRlZEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBzZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdl
cgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAFJlc29sdmVFdmVudEhhbmRsZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfYTY3ZGJkZThmNGNhNGRlYWEzOWVlMGM1ODdiN2NiOTAuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E2N2RiZGU4ZjRjYTRkZWFhMzll
ZTBjNTg3YjdjYjkwLlByb3BlcnRpZXMASnd0UmVnaXN0ZXJlZENsYWltTmFtZXMAU2V0dGluZ3MA
UmVzb2x2ZUV2ZW50QXJncwBhcmdzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAE1pY3Jvc29mdC5JZGVu
dGl0eU1vZGVsLkpzb25XZWJUb2tlbnMAQ29udGFpbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNr
UmVzdWx0AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAICtQwA6AFwAVQBzAGUAcgBzAFwA
bgBtAGEAcgB1AGsAdQByAHQAaABpAFwATwBuAGUARAByAGkAdgBlACAALQAgAFIAZQBhAGwAUABh
AGcAZQBcAFMAVABBAEcAXABBAEkATQAgAEkAbgB0AGUAZwByAGEAdABpAG8AbgBcAEEAdQB0AGgA
ZQBuAHQAaQBjAGEAdABpAG8AbgBcAGIAaQBuAFwARABlAGIAdQBnAAEdQQB1AHQAaABlAG4AdABp
AGMAYQB0AGkAbwBuAAAlQQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuAC4AZABsAGwAAD9TAHkA
cwB0AGUAbQAuAEkAZABlAG4AdABpAHQAeQBNAG8AZABlAGwALgBUAG8AawBlAG4AcwAuAEoAdwB0
AABHUwB5AHMAdABlAG0ALgBJAGQAZQBuAHQAaQB0AHkATQBvAGQAZQBsAC4AVABvAGsAZQBuAHMA
LgBKAHcAdAAuAGQAbABsAAA9TQBpAGMAcgBvAHMAbwBmAHQALgBJAGQAZQBuAHQAaQB0AHkATQBv
AGQAZQBsAC4AVABvAGsAZQBuAHMAAEVNAGkAYwByAG8AcwBvAGYAdAAuAEkAZABlAG4AdABpAHQA
eQBNAG8AZABlAGwALgBUAG8AawBlAG4AcwAuAGQAbABsAABLTQBpAGMAcgBvAHMAbwBmAHQALgBJ
AGQAZQBuAHQAaQB0AHkATQBvAGQAZQBsAC4ASgBzAG8AbgBXAGUAYgBUAG8AawBlAG4AcwAAU00A
aQBjAHIAbwBzAG8AZgB0AC4ASQBkAGUAbgB0AGkAdAB5AE0AbwBkAGUAbAAuAEoAcwBvAG4AVwBl
AGIAVABvAGsAZQBuAHMALgBkAGwAbAAAP00AaQBjAHIAbwBzAG8AZgB0AC4ASQBkAGUAbgB0AGkA
dAB5AE0AbwBkAGUAbAAuAEwAbwBnAGcAaQBuAGcAAEdNAGkAYwByAG8AcwBvAGYAdAAuAEkAZABl
AG4AdABpAHQAeQBNAG8AZABlAGwALgBMAG8AZwBnAGkAbgBnAC4AZABsAGwAAElNAGkAYwByAG8A
cwBvAGYAdAAuAEkAZABlAG4AdABpAHQAeQBNAG8AZABlAGwALgBBAGIAcwB0AHIAYQBjAHQAaQBv
AG4AcwAAUU0AaQBjAHIAbwBzAG8AZgB0AC4ASQBkAGUAbgB0AGkAdAB5AE0AbwBkAGUAbAAuAEEA
YgBzAHQAcgBhAGMAdABpAG8AbgBzAC4AZABsAGwAAB9OAGUAdwB0AG8AbgBzAG8AZgB0AC4ASgBz
AG8AbgAAJ04AZQB3AHQAbwBuAHMAbwBmAHQALgBKAHMAbwBuAC4AZABsAGwAAHFTAFQAXwBhADYA
NwBkAGIAZABlADgAZgA0AGMAYQA0AGQAZQBhAGEAMwA5AGUAZQAwAGMANQA4ADcAYgA3AGMAYgA5
ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA4zic8ImbzEu9
M5ztUKWzbgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERZQQAABJ1BSACARwYBSABARJ5AwcBDgMg
AA4EIAECDgUAAg4ODgUAARJBDgYAARGAjQ4FIAASgJEGAAEBEYCZCAABEoCdEYChBCAAEkEGIAIB
DhJBCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41BAAAAAAEAQAAAAMGEl0DBhJhAwYSEAIGCAMG
ERQHIAISQRwSSQMAAAEEAAASXQQAABJhBQABARJhBAAAEhAECAASXQQIABJhBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2E2N2RiZGU4
ZjRjYTRkZWFhMzllZTBjNTg3YjdjYjkwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA0NQAAAAAAAAAAAABONQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQC8W4UhAAABALxbhSE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEANgA3AGQAYgBkAGUAOABmADQAYwBhADQAZABlAGEAYQAzADkAZQBlADAAYwA1ADgA
NwBiADcAYwBiADkAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADUAOAAxAC4AMgAzADQAOAA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGEANgA3AGQAYgBkAGUAOABmADQAYwBhADQAZABlAGEAYQAzADkAZQBlADAAYwA1ADgANwBi
ADcAYwBiADkAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYQA2ADcAZABiAGQAZQA4AGYANABjAGEANABkAGUAYQBhADMAOQBlAGUAMABj
ADUAOAA3AGIANwBjAGIAOQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEANgA3AGQAYgBkAGUAOABmADQAYwBhADQAZABlAGEAYQAzADkAZQBlADAAYwA1
ADgANwBiADcAYwBiADkAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA1ADgAMQAuADIAMwA0ADgANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA1ADgAMQAuADIAMwA0ADgANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="146"
            Column="3" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="106"
            Column="9" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="361.666652295325,146.466667830679" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>